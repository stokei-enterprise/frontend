// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

@mixin button-variant($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;

  &:focus,
  &.focus {
    color: darken($color, 10%);
    background-color: darken($background, 10%);
    border-color: darken($border, 25%);
  }
  &:hover {
    color: darken($color, 10%);
    background-color: darken($background, 10%);
    border-color: darken($border, 12%);
  }
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: darken($color, 10%);
    background-color: darken($background, 10%);
    background-image: none;
    border-color: darken($border, 12%);

    &:hover,
    &:focus,
    &.focus {
      color: darken($color, 10%);
      background-color: darken($background, 17%);
      border-color: darken($border, 25%);
    }
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    color: rgba($color, 0.7);

    @if $background != transparent {
      background-color: rgba($background, 0.7);
    } @else {
      background-color: transparent;
    }
    @if $border != transparent {
      border-color: rgba($border, 0.7);
    } @else {
      border-color: transparent;
    }

    &:hover,
    &:focus,
    &.focus {
      color: rgba($color, 0.5);

      @if $background != transparent {
        background-color: rgba($background, 0.5);
      } @else {
        background-color: transparent;
      }
      @if $border != transparent {
        border-color: rgba($border, 0.5);
      } @else {
        border-color: transparent;
      }
    }
  }

  .badge {
    color: $background;
    background-color: $color;
  }
}

@mixin button-variant-clean($color) {
  color: $color;

  &:focus,
  &.focus {
    background: rgba($color, 0.1);
  }
  &:hover {
    background: rgba($color, 0.1);
  }
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    background: rgba($color, 0.1);

    &:hover,
    &:focus,
    &.focus {
      background: rgba($color, 0.1);
    }
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    color: rgba($color, 0.7);
    &:hover,
    &:focus,
    &.focus {
      background: rgba($color, 0.1);
    }
  }

  .badge {
    background: rgba($color, 0.1);
  }
}

@mixin button-variant-link($color) {
  color: $color;

  &:focus,
  &.focus,
  &:hover,
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: rgba($color, 0.7);
    text-decoration: underline;
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    color: rgba($color, 0.7);
  }
}

// Button sizes
@mixin button-size(
  $padding-vertical,
  $padding-horizontal,
  $font-size,
  $line-height,
  $border-radius
) {
  padding: $padding-vertical $padding-horizontal;
  font-size: $font-size;
  line-height: $line-height;
  border-radius: $border-radius;
}
